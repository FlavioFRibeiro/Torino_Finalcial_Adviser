# File: /Torino_Financial_Advisor/Torino_Financial_Advisor/web_app/app.py

import streamlit as st
from analytics.data_extraction import data_extraction
from analytics.plot_utils import plot_stock_price, plot_candlestick, plot_media_movel, plot_volume
from ai_agents.agents import multi_ai_agent
import re

def run_app():
    # Configura칞칚o da p치gina do Streamlit
    st.set_page_config(page_title="Torino AI", page_icon="游눯游붧", layout="wide")

    # Barra Lateral com instru칞칫es
    from .sidebar import display_sidebar
    display_sidebar()

    # T칤tulo principal
    st.title("游눯游붧 Torino - O AI Financial Advisor")

    # Interface principal
    st.header("Stocks Analytics em Tempo Real com o Torino 游붧")

    # Caixa de texto para input do usu치rio
    ticker = st.text_input("Digite o C칩digo da A칞칚o Desejada:").upper()

    # Se o usu치rio pressionar o bot칚o, entramos neste bloco
    if st.button("Analisar"):

        # Se temos o c칩digo da a칞칚o (ticker)
        if ticker:

            # Inicia o processamento
            with st.spinner("Buscando os Dados em Tempo Real. Aguarde..."):
                
                # Obt칠m os dados
                hist = data_extraction(ticker)
                
                # Renderiza um subt칤tulo
                st.subheader("An치lise Gerada pelo Torino 游붧")
                
                # Executa o time de Agentes de IA
                ai_response = multi_ai_agent.run(f"Resumir a recomenda칞칚o do analista e compartilhar as 칰ltimas not칤cias para {ticker}")

                # Remove linhas que come칞am com "Running:"
                clean_response = re.sub(r"(Running:[\s\S]*?\n\n)|(^transfer_task_to_finance_ai_agent.*\n?)","", ai_response.content, flags=re.MULTILINE).strip()

                # Imprime a resposta
                st.markdown(clean_response)

                # Renderiza os gr치ficos
                st.subheader("Visualiza칞칚o dos Dados")
                plot_stock_price(hist, ticker)
                plot_candlestick(hist, ticker)
                plot_media_movel(hist, ticker)
                plot_volume(hist, ticker)
        else:
            st.error("Ticker inv치lido. Insira um s칤mbolo de a칞칚o v치lido para o Torino trabalhar.")